name: Test Build Locally

on:
  workflow_dispatch:
  push:
    branches: [ test-* ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup user environment and install dependencies
        run: |
          # Create a normal user environment
          useradd -m -s /bin/bash builder
          
          # Install dependencies as root first
          # Install LLVM/Clang 20
          wget -qO- https://apt.llvm.org/llvm.sh | sudo bash -s -- 20
          
          # Install newer CMake from Kitware
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ jammy main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
          
          sudo apt-get update -q
          sudo apt-get install -y --no-install-recommends \
            cmake \
            ninja-build \
            make \
            git \
            clang-20 \
            libc++-20-dev \
            libc++abi-20-dev \
            libclang-rt-20-dev \
            tar \
            coreutils \
            sudo
          
          # Give builder user access to the project
          sudo chown -R builder:builder ${{ github.workspace }}
      
      
      - name: Build and test as builder user
        run: |
          sudo -u builder bash -c '
            cd ${{ github.workspace }}
            
            echo "Verifying Clang installation..."
            clang++-20 --version
            
            echo "Testing C++23 features..."
            echo "#include <expected>" > /tmp/test_expected.cpp
            echo "int main() { std::expected<int, int> e{42}; return 0; }" >> /tmp/test_expected.cpp
            clang++-20 -stdlib=libc++ -std=c++23 /tmp/test_expected.cpp -o /tmp/test_expected
            echo "C++23 test passed!"
            
            mkdir -p build
            
            echo "Configuring with CMake..."
            cmake -B build -S . \
              -G Ninja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_TOOLCHAIN_FILE=toolchainfile-amd64-clang20.cmake \
              -DCMAKE_C_COMPILER=clang-20 \
              -DCMAKE_CXX_COMPILER=clang++-20 \
              -DCMAKE_CXX_STANDARD=23
              
            echo "Building..."
            cmake --build build -j$(nproc)
            
            echo "Running tests..."
            cd build
            ctest --output-on-failure || echo "Some tests may have failed, but build was successful"
          '